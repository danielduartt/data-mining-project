2025-02-14 16:58:55,303 - StudentAnalyzer - INFO - Logging initialized. Log file: logs\student_analysis_20250214_165855.log
2025-02-14 16:58:55,304 - StudentAnalyzer - INFO - Starting main execution
2025-02-14 16:58:55,305 - StudentAnalyzer - INFO - Loading data from: data/cleaned_dataset.csv
2025-02-14 16:58:55,351 - StudentAnalyzer - INFO - Dataset loaded successfully. Shape: (4424, 37)
2025-02-14 16:58:55,351 - StudentAnalyzer - INFO - Validating data
2025-02-14 16:58:55,356 - StudentAnalyzer - INFO - Preprocessing data
2025-02-14 16:58:55,356 - StudentAnalyzer - INFO - Setting up data types and optimizing memory usage
2025-02-14 16:58:55,362 - StudentAnalyzer - INFO - Initial memory usage: 1.25 MB
2025-02-14 16:58:55,369 - StudentAnalyzer - INFO - Final memory usage: 0.34 MB
2025-02-14 16:58:55,369 - StudentAnalyzer - INFO - Memory reduction: 72.63%
2025-02-14 16:58:55,369 - StudentAnalyzer - INFO - Number of numeric features: 36
2025-02-14 16:58:55,370 - StudentAnalyzer - INFO - Number of categorical features: 0
2025-02-14 16:58:55,370 - StudentAnalyzer - INFO - Starting feature analysis
2025-02-14 16:58:55,370 - StudentAnalyzer - INFO - Starting feature distribution analysis
2025-02-14 16:58:55,676 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:58:55,682 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:58:59,260 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:58:59,267 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:58:59,836 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:58:59,841 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:00,305 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:00,308 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:00,771 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:00,775 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:01,254 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:01,258 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:01,714 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:01,718 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:02,163 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:02,167 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:02,636 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:02,640 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:03,139 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:03,143 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:03,691 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:03,695 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:04,180 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:04,184 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:04,664 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:04,668 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:05,138 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:05,142 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:05,565 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:05,569 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:06,038 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:06,042 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:06,525 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:06,530 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:07,057 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:07,061 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:07,974 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:07,978 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:09,107 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:09,112 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:12,067 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:12,071 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:12,575 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:12,579 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:13,115 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:13,119 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:13,704 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:13,708 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:14,458 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:14,462 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:15,053 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:15,056 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:15,676 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:15,681 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:16,251 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:16,255 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:16,759 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:16,764 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:17,282 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:17,286 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:17,773 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:17,776 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:18,275 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:18,279 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:18,761 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:18,766 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:19,290 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:19,294 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:19,863 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:19,867 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:20,357 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:20,361 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:20,740 - StudentAnalyzer - INFO - Feature distribution analysis completed
2025-02-14 16:59:20,740 - StudentAnalyzer - INFO - Starting performance analysis
2025-02-14 16:59:20,740 - StudentAnalyzer - INFO - Starting academic performance analysis
2025-02-14 16:59:20,842 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:20,847 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:21,256 - StudentAnalyzer - ERROR - Error in academic performance analysis: 'float' object is not subscriptable
2025-02-14 16:59:21,257 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:59:21,257 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:59:22,976 - StudentAnalyzer - INFO - Correlation analysis completed
2025-02-14 16:59:22,976 - StudentAnalyzer - INFO - Starting risk analysis
2025-02-14 16:59:22,977 - StudentAnalyzer - INFO - Starting dropout pattern analysis
2025-02-14 16:59:24,112 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:24,116 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:24,622 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:24,626 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:25,597 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:25,600 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:59:26,191 - StudentAnalyzer - INFO - Dropout pattern analysis completed
2025-02-14 16:59:26,192 - StudentAnalyzer - INFO - Starting risk assessment generation
2025-02-14 16:59:26,208 - StudentAnalyzer - ERROR - Error in risk assessment generation: Bin edges must be unique: Index([0.0, 0.0, 0.0, 1.0], dtype='float64', name='risk_score').
You can drop duplicate edges by setting the 'duplicates' kwarg
2025-02-14 16:59:26,209 - StudentAnalyzer - INFO - Starting semester analysis
2025-02-14 16:59:26,209 - StudentAnalyzer - INFO - Starting semester pattern analysis
2025-02-14 16:59:27,233 - StudentAnalyzer - INFO - Semester pattern analysis completed
2025-02-14 16:59:27,234 - StudentAnalyzer - INFO - Starting ensemble analysis
2025-02-14 16:59:27,234 - StudentAnalyzer - INFO - Preparing features with advanced engineering
2025-02-14 16:59:27,257 - StudentAnalyzer - INFO - Prepared features with shape: (4424, 48)
2025-02-14 16:59:27,257 - StudentAnalyzer - INFO - Optimizing model hyperparameters...
2025-02-14 16:59:27,262 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,264 - StudentAnalyzer - INFO - Trial 0 completed. Best score so far: -0.0000
2025-02-14 16:59:27,266 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,269 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,271 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,273 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,275 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,276 - StudentAnalyzer - INFO - Trial 5 completed. Best score so far: -0.0000
2025-02-14 16:59:27,278 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,282 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,284 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,287 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,320 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,322 - StudentAnalyzer - INFO - Trial 10 completed. Best score so far: -0.0000
2025-02-14 16:59:27,356 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,393 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,434 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,470 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,504 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,506 - StudentAnalyzer - INFO - Trial 15 completed. Best score so far: -0.0000
2025-02-14 16:59:27,545 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,582 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,617 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,653 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,707 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,708 - StudentAnalyzer - INFO - Trial 20 completed. Best score so far: -0.0000
2025-02-14 16:59:27,744 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,785 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,830 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,868 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,907 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,908 - StudentAnalyzer - INFO - Trial 25 completed. Best score so far: -0.0000
2025-02-14 16:59:27,945 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:27,986 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,023 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,064 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,105 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,106 - StudentAnalyzer - INFO - Trial 30 completed. Best score so far: -0.0000
2025-02-14 16:59:28,145 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,186 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,225 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,268 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,308 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,310 - StudentAnalyzer - INFO - Trial 35 completed. Best score so far: -0.0000
2025-02-14 16:59:28,350 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,389 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,435 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,475 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,517 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,519 - StudentAnalyzer - INFO - Trial 40 completed. Best score so far: -0.0000
2025-02-14 16:59:28,560 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,610 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,653 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,693 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,738 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,739 - StudentAnalyzer - INFO - Trial 45 completed. Best score so far: -0.0000
2025-02-14 16:59:28,780 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,834 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,879 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,922 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:59:28,925 - StudentAnalyzer - INFO - Best value: -0.0000
2025-02-14 16:59:28,925 - StudentAnalyzer - INFO - Best hyperparameters found: {'random_forest': {'n_estimators': 927, 'max_depth': 15, 'min_samples_split': 2, 'min_samples_leaf': 5, 'max_features': 'sqrt', 'max_samples': 0.8147085407449802, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'n_jobs': -1, 'random_state': 42, 'bootstrap': True, 'warm_start': True}, 'gradient_boosting': {'n_estimators': 456, 'learning_rate': 0.06310431437125484, 'max_depth': 9, 'min_samples_split': 11, 'min_samples_leaf': 7, 'subsample': 0.8465012219277692, 'max_features': 0.8003088164740692, 'validation_fraction': 0.2, 'n_iter_no_change': 20, 'random_state': 42, 'warm_start': True}, 'adaboost': {'n_estimators': 452, 'learning_rate': 0.05312252200220048, 'random_state': 42}}
2025-02-14 16:59:28,925 - StudentAnalyzer - INFO - Starting ensemble analysis of dropout patterns
2025-02-14 16:59:44,420 - StudentAnalyzer - ERROR - Error in dropout pattern analysis: All arrays must be of the same length
2025-02-14 16:59:44,430 - StudentAnalyzer - ERROR - Error generating risk scores: X has 48 features, but RandomForestClassifier is expecting 38 features as input.
2025-02-14 16:59:44,431 - StudentAnalyzer - INFO - Generating reports and exporting results
2025-02-14 16:59:44,453 - StudentAnalyzer - INFO - Summary report generated successfully at analysis_results
2025-02-14 16:59:44,453 - StudentAnalyzer - INFO - Exporting analysis results to analysis_results
2025-02-14 16:59:44,868 - StudentAnalyzer - INFO - Results exported successfully to analysis_results\20250214_165944
2025-02-14 16:59:45,177 - StudentAnalyzer - INFO - Models saved successfully
2025-02-14 16:59:45,179 - StudentAnalyzer - INFO - Analysis completed successfully
