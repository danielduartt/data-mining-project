2025-02-14 17:21:05,082 - StudentAnalyzer - INFO - Logging initialized. Log file: logs\student_analysis_20250214_172105.log
2025-02-14 17:21:05,083 - StudentAnalyzer - INFO - Starting main execution
2025-02-14 17:21:05,084 - StudentAnalyzer - INFO - Loading data from: data/cleaned_dataset.csv
2025-02-14 17:21:05,099 - StudentAnalyzer - INFO - Dataset loaded successfully. Shape: (4424, 37)
2025-02-14 17:21:05,099 - StudentAnalyzer - INFO - Validating data
2025-02-14 17:21:05,103 - StudentAnalyzer - INFO - Preprocessing data
2025-02-14 17:21:05,103 - StudentAnalyzer - INFO - Setting up data types and optimizing memory usage
2025-02-14 17:21:05,107 - StudentAnalyzer - INFO - Initial memory usage: 1.25 MB
2025-02-14 17:21:05,115 - StudentAnalyzer - INFO - Final memory usage: 0.34 MB
2025-02-14 17:21:05,115 - StudentAnalyzer - INFO - Memory reduction: 72.63%
2025-02-14 17:21:05,115 - StudentAnalyzer - INFO - Number of numeric features: 36
2025-02-14 17:21:05,116 - StudentAnalyzer - INFO - Number of categorical features: 0
2025-02-14 17:21:05,116 - StudentAnalyzer - INFO - Starting feature analysis
2025-02-14 17:21:05,116 - StudentAnalyzer - INFO - Starting feature distribution analysis
2025-02-14 17:21:05,442 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:05,447 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:06,437 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:06,442 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:07,018 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:07,025 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:07,550 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:07,555 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:08,012 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:08,017 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:08,655 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:08,659 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:16,379 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:16,385 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:17,491 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:17,494 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:18,032 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:18,036 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:18,561 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:18,564 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:19,242 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:19,248 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:19,922 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:19,925 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:20,400 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:20,404 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:20,955 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:20,958 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:21,708 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:21,712 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:22,315 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:22,320 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:22,886 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:22,892 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:23,436 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:23,440 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:24,038 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:24,042 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:24,501 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:24,504 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:25,128 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:25,132 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:26,080 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:26,085 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:29,354 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:29,358 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:30,589 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:30,593 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:31,378 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:31,382 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:31,890 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:31,894 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:32,367 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:32,372 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:34,457 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:34,462 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:40,008 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:40,011 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:42,714 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:42,720 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:43,289 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:43,292 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:43,779 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:43,784 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:44,280 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:44,283 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:44,844 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:44,847 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:45,356 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:45,360 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:45,866 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:45,871 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:49,852 - StudentAnalyzer - INFO - Feature distribution analysis completed
2025-02-14 17:21:49,853 - StudentAnalyzer - INFO - Starting performance analysis
2025-02-14 17:21:49,853 - StudentAnalyzer - INFO - Starting academic performance analysis
2025-02-14 17:21:49,931 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:49,936 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:50,397 - StudentAnalyzer - ERROR - Error in academic performance analysis: 'float' object is not subscriptable
2025-02-14 17:21:50,397 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 17:21:50,397 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 17:21:52,104 - StudentAnalyzer - INFO - Correlation analysis completed
2025-02-14 17:21:52,104 - StudentAnalyzer - INFO - Starting risk analysis
2025-02-14 17:21:52,105 - StudentAnalyzer - INFO - Starting dropout pattern analysis
2025-02-14 17:21:53,325 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:53,329 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:53,820 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:53,824 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:55,009 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:55,012 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 17:21:55,497 - StudentAnalyzer - INFO - Dropout pattern analysis completed
2025-02-14 17:21:55,497 - StudentAnalyzer - INFO - Starting risk assessment generation
2025-02-14 17:21:55,503 - StudentAnalyzer - ERROR - Error in risk assessment generation: Bin edges must be unique: Index([0.0, 0.0, 0.0, 1.0], dtype='float64', name='risk_score').
You can drop duplicate edges by setting the 'duplicates' kwarg
2025-02-14 17:21:55,504 - StudentAnalyzer - INFO - Starting semester analysis
2025-02-14 17:21:55,505 - StudentAnalyzer - INFO - Starting semester pattern analysis
2025-02-14 17:21:56,295 - StudentAnalyzer - INFO - Semester pattern analysis completed
2025-02-14 17:21:56,295 - StudentAnalyzer - INFO - Starting ensemble analysis
2025-02-14 17:21:56,296 - StudentAnalyzer - INFO - Preparing features with advanced engineering
2025-02-14 17:21:56,301 - StudentAnalyzer - INFO - Original numeric features: 36
2025-02-14 17:21:56,306 - StudentAnalyzer - INFO - Semester features added: 3
2025-02-14 17:21:56,308 - StudentAnalyzer - INFO - Socioeconomic features added: 1
2025-02-14 17:21:56,311 - StudentAnalyzer - INFO - Age features added: 1
2025-02-14 17:21:56,312 - StudentAnalyzer - INFO - Categorical features added: 1
2025-02-14 17:21:56,316 - StudentAnalyzer - INFO - Total features prepared: 46
2025-02-14 17:21:56,317 - StudentAnalyzer - INFO - Optimizing model hyperparameters...
2025-02-14 17:21:56,326 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,329 - StudentAnalyzer - INFO - Trial 0 completed. Best score so far: -0.0000
2025-02-14 17:21:56,331 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,334 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,338 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,342 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,344 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,345 - StudentAnalyzer - INFO - Trial 5 completed. Best score so far: -0.0000
2025-02-14 17:21:56,347 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,350 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,354 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,357 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,393 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,395 - StudentAnalyzer - INFO - Trial 10 completed. Best score so far: -0.0000
2025-02-14 17:21:56,433 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,476 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,512 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,550 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,586 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,589 - StudentAnalyzer - INFO - Trial 15 completed. Best score so far: -0.0000
2025-02-14 17:21:56,622 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,656 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,691 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,728 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,765 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,766 - StudentAnalyzer - INFO - Trial 20 completed. Best score so far: -0.0000
2025-02-14 17:21:56,802 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,841 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,878 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,917 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,956 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:56,958 - StudentAnalyzer - INFO - Trial 25 completed. Best score so far: -0.0000
2025-02-14 17:21:56,996 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,036 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,072 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,116 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,159 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,161 - StudentAnalyzer - INFO - Trial 30 completed. Best score so far: -0.0000
2025-02-14 17:21:57,198 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,243 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,292 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,357 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,397 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,398 - StudentAnalyzer - INFO - Trial 35 completed. Best score so far: -0.0000
2025-02-14 17:21:57,446 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,486 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,529 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,570 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,612 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,613 - StudentAnalyzer - INFO - Trial 40 completed. Best score so far: -0.0000
2025-02-14 17:21:57,656 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,704 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,746 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,794 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,838 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,840 - StudentAnalyzer - INFO - Trial 45 completed. Best score so far: -0.0000
2025-02-14 17:21:57,884 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,936 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:57,980 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:58,029 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 17:21:58,031 - StudentAnalyzer - INFO - Best value: -0.0000
2025-02-14 17:21:58,031 - StudentAnalyzer - INFO - Best hyperparameters found: {'random_forest': {'n_estimators': 317, 'max_depth': 32, 'min_samples_split': 10, 'min_samples_leaf': 3, 'max_features': 'log2', 'max_samples': 0.8708518592129235, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'n_jobs': -1, 'random_state': 42, 'bootstrap': True, 'warm_start': True}, 'gradient_boosting': {'n_estimators': 367, 'learning_rate': 0.03366252302277893, 'max_depth': 12, 'min_samples_split': 9, 'min_samples_leaf': 7, 'subsample': 0.8291735239345741, 'max_features': 0.8149962780473273, 'validation_fraction': 0.2, 'n_iter_no_change': 20, 'random_state': 42, 'warm_start': True}, 'adaboost': {'n_estimators': 353, 'learning_rate': 0.01950292312585162, 'random_state': 42}}
2025-02-14 17:21:58,032 - StudentAnalyzer - INFO - Starting ensemble analysis of dropout patterns
2025-02-14 17:22:09,617 - StudentAnalyzer - ERROR - Error in dropout pattern analysis: All arrays must be of the same length
2025-02-14 17:22:09,636 - StudentAnalyzer - ERROR - Error generating risk scores: X has 46 features, but RandomForestClassifier is expecting 37 features as input.
2025-02-14 17:22:09,637 - StudentAnalyzer - INFO - Generating reports and exporting results
2025-02-14 17:22:11,173 - StudentAnalyzer - INFO - Summary report generated successfully at analysis_results
2025-02-14 17:22:11,174 - StudentAnalyzer - INFO - Exporting analysis results to analysis_results
2025-02-14 17:22:12,627 - StudentAnalyzer - INFO - Results exported successfully to analysis_results\20250214_172211
2025-02-14 17:22:16,977 - StudentAnalyzer - INFO - Models saved successfully
2025-02-14 17:22:16,978 - StudentAnalyzer - INFO - Analysis completed successfully
