2025-02-14 16:53:41,254 - StudentAnalyzer - INFO - Logging initialized. Log file: logs\student_analysis_20250214_165341.log
2025-02-14 16:53:41,254 - StudentAnalyzer - INFO - Starting main execution
2025-02-14 16:53:41,255 - StudentAnalyzer - INFO - Loading data from: data/cleaned_dataset.csv
2025-02-14 16:53:41,270 - StudentAnalyzer - INFO - Dataset loaded successfully. Shape: (4424, 37)
2025-02-14 16:53:41,271 - StudentAnalyzer - INFO - Validating data
2025-02-14 16:53:41,274 - StudentAnalyzer - INFO - Preprocessing data
2025-02-14 16:53:41,275 - StudentAnalyzer - INFO - Setting up data types and optimizing memory usage
2025-02-14 16:53:41,278 - StudentAnalyzer - INFO - Initial memory usage: 1.25 MB
2025-02-14 16:53:41,288 - StudentAnalyzer - INFO - Final memory usage: 0.34 MB
2025-02-14 16:53:41,289 - StudentAnalyzer - INFO - Memory reduction: 72.63%
2025-02-14 16:53:41,289 - StudentAnalyzer - INFO - Number of numeric features: 36
2025-02-14 16:53:41,289 - StudentAnalyzer - INFO - Number of categorical features: 0
2025-02-14 16:53:41,289 - StudentAnalyzer - INFO - Starting feature analysis
2025-02-14 16:53:41,290 - StudentAnalyzer - INFO - Starting feature distribution analysis
2025-02-14 16:53:41,590 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:41,594 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:42,246 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:42,250 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:42,771 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:42,775 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:43,265 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:43,269 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:43,766 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:43,770 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:44,202 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:44,206 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:44,698 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:44,701 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,117 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,121 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,556 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,560 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,995 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:45,999 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:46,549 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:46,552 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:47,184 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:47,188 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:47,675 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:47,680 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:48,212 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:48,217 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:48,647 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:48,651 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:49,150 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:49,153 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:49,651 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:49,655 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:50,135 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:50,139 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:50,704 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:50,709 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:51,270 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:51,275 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:51,814 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:51,818 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:52,306 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:52,310 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:52,830 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:52,834 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:53,315 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:53,319 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:53,818 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:53,823 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:54,329 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:54,333 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:54,805 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:54,809 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:55,300 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:55,303 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:55,781 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:55,785 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:56,290 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:56,295 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:56,803 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:56,807 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:57,344 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:57,348 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:57,779 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:57,783 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:58,236 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:58,241 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:58,806 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:58,811 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:59,271 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:59,277 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:59,652 - StudentAnalyzer - INFO - Feature distribution analysis completed
2025-02-14 16:53:59,652 - StudentAnalyzer - INFO - Starting performance analysis
2025-02-14 16:53:59,652 - StudentAnalyzer - INFO - Starting academic performance analysis
2025-02-14 16:53:59,733 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:53:59,737 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:00,178 - StudentAnalyzer - ERROR - Error in academic performance analysis: 'float' object is not subscriptable
2025-02-14 16:54:00,178 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:54:00,178 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:54:01,787 - StudentAnalyzer - INFO - Correlation analysis completed
2025-02-14 16:54:01,788 - StudentAnalyzer - INFO - Starting risk analysis
2025-02-14 16:54:01,788 - StudentAnalyzer - INFO - Starting dropout pattern analysis
2025-02-14 16:54:02,905 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:02,910 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:03,364 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:03,368 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:04,279 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:04,282 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:54:04,799 - StudentAnalyzer - INFO - Dropout pattern analysis completed
2025-02-14 16:54:04,799 - StudentAnalyzer - INFO - Starting risk assessment generation
2025-02-14 16:54:04,804 - StudentAnalyzer - ERROR - Error in risk assessment generation: Bin edges must be unique: Index([0.0, 0.0, 0.0, 1.0], dtype='float64', name='risk_score').
You can drop duplicate edges by setting the 'duplicates' kwarg
2025-02-14 16:54:04,805 - StudentAnalyzer - INFO - Starting semester analysis
2025-02-14 16:54:04,805 - StudentAnalyzer - INFO - Starting semester pattern analysis
2025-02-14 16:54:05,600 - StudentAnalyzer - INFO - Semester pattern analysis completed
2025-02-14 16:54:05,600 - StudentAnalyzer - INFO - Starting ensemble analysis
2025-02-14 16:54:05,601 - StudentAnalyzer - INFO - Preparing features with advanced engineering
2025-02-14 16:54:05,620 - StudentAnalyzer - INFO - Prepared features with shape: (4424, 48)
2025-02-14 16:54:05,621 - StudentAnalyzer - INFO - Optimizing model hyperparameters...
2025-02-14 16:54:05,626 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,628 - StudentAnalyzer - INFO - Trial 0 completed. Best score so far: -0.0000
2025-02-14 16:54:05,630 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,633 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,637 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,640 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,644 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,645 - StudentAnalyzer - INFO - Trial 5 completed. Best score so far: -0.0000
2025-02-14 16:54:05,647 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,651 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,653 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,657 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,719 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,720 - StudentAnalyzer - INFO - Trial 10 completed. Best score so far: -0.0000
2025-02-14 16:54:05,758 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,802 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,844 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,884 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,924 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:05,928 - StudentAnalyzer - INFO - Trial 15 completed. Best score so far: -0.0000
2025-02-14 16:54:05,966 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,004 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,052 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,091 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,131 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,132 - StudentAnalyzer - INFO - Trial 20 completed. Best score so far: -0.0000
2025-02-14 16:54:06,172 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,231 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,278 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,319 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,362 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,363 - StudentAnalyzer - INFO - Trial 25 completed. Best score so far: -0.0000
2025-02-14 16:54:06,404 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,446 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,490 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,533 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,577 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,578 - StudentAnalyzer - INFO - Trial 30 completed. Best score so far: -0.0000
2025-02-14 16:54:06,620 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,665 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,710 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,755 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,801 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,802 - StudentAnalyzer - INFO - Trial 35 completed. Best score so far: -0.0000
2025-02-14 16:54:06,847 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,892 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,941 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:06,986 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,034 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,035 - StudentAnalyzer - INFO - Trial 40 completed. Best score so far: -0.0000
2025-02-14 16:54:07,083 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,128 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,176 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,228 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,275 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,276 - StudentAnalyzer - INFO - Trial 45 completed. Best score so far: -0.0000
2025-02-14 16:54:07,323 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,372 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,422 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,470 - StudentAnalyzer - ERROR - Error in trial: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:54:07,472 - StudentAnalyzer - INFO - Best value: -0.0000
2025-02-14 16:54:07,474 - StudentAnalyzer - ERROR - Error in main execution: Invalid parameter 'base_max_depth' for estimator AdaBoostClassifier(learning_rate=0.05, n_estimators=200, random_state=42). Valid parameters are: ['algorithm', 'estimator', 'learning_rate', 'n_estimators', 'random_state'].
2025-02-14 16:54:07,474 - StudentAnalyzer - ERROR - Detailed error trace:
Traceback (most recent call last):
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\main.py", line 129, in main
    best_params = ensemble_analyzer.optimize_hyperparameters(X, y, n_trials=50)
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\analysis\ensemble_analyzer.py", line 89, in optimize_hyperparameters
    self.models['adaboost'].set_params(**best_params['adaboost'])
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\venv\Lib\site-packages\sklearn\base.py", line 283, in set_params
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Invalid parameter 'base_max_depth' for estimator AdaBoostClassifier(learning_rate=0.05, n_estimators=200, random_state=42). Valid parameters are: ['algorithm', 'estimator', 'learning_rate', 'n_estimators', 'random_state'].
