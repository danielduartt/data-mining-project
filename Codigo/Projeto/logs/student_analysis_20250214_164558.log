2025-02-14 16:45:58,481 - StudentAnalyzer - INFO - Logging initialized. Log file: logs\student_analysis_20250214_164558.log
2025-02-14 16:45:58,482 - StudentAnalyzer - INFO - Starting main execution
2025-02-14 16:45:58,483 - StudentAnalyzer - INFO - Loading data from: data/cleaned_dataset.csv
2025-02-14 16:45:58,501 - StudentAnalyzer - INFO - Dataset loaded successfully. Shape: (4424, 37)
2025-02-14 16:45:58,502 - StudentAnalyzer - INFO - Validating data
2025-02-14 16:45:58,505 - StudentAnalyzer - INFO - Preprocessing data
2025-02-14 16:45:58,506 - StudentAnalyzer - INFO - Setting up data types and optimizing memory usage
2025-02-14 16:45:58,508 - StudentAnalyzer - INFO - Initial memory usage: 1.25 MB
2025-02-14 16:45:58,518 - StudentAnalyzer - INFO - Final memory usage: 0.34 MB
2025-02-14 16:45:58,518 - StudentAnalyzer - INFO - Memory reduction: 72.63%
2025-02-14 16:45:58,518 - StudentAnalyzer - INFO - Number of numeric features: 36
2025-02-14 16:45:58,518 - StudentAnalyzer - INFO - Number of categorical features: 0
2025-02-14 16:45:58,518 - StudentAnalyzer - INFO - Starting feature analysis
2025-02-14 16:45:58,519 - StudentAnalyzer - INFO - Starting feature distribution analysis
2025-02-14 16:45:58,831 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:45:58,835 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:45:59,734 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:45:59,739 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:00,263 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:00,267 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:00,779 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:00,783 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:01,269 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:01,273 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:01,699 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:01,702 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:02,183 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:02,187 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:02,610 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:02,615 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:03,069 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:03,073 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:03,573 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:03,578 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:04,166 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:04,170 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:04,756 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:04,760 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:05,282 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:05,286 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:05,798 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:05,802 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:06,300 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:06,305 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:06,852 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:06,856 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:07,372 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:07,376 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:07,873 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:07,878 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:08,512 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:08,516 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:08,984 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:08,988 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:09,523 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:09,528 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:10,059 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:10,063 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:10,561 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:10,565 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:11,069 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:11,073 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:11,604 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:11,609 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:12,153 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:12,159 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:12,610 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:12,614 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:13,050 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:13,053 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:13,575 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:13,579 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:14,066 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:14,070 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:14,584 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:14,588 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:15,111 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:15,115 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:15,527 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:15,531 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:16,016 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:16,020 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:16,560 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:16,564 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:17,104 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:17,109 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:17,535 - StudentAnalyzer - INFO - Feature distribution analysis completed
2025-02-14 16:46:17,536 - StudentAnalyzer - INFO - Starting performance analysis
2025-02-14 16:46:17,536 - StudentAnalyzer - INFO - Starting academic performance analysis
2025-02-14 16:46:17,613 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:17,617 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:18,096 - StudentAnalyzer - ERROR - Error in academic performance analysis: 'float' object is not subscriptable
2025-02-14 16:46:18,097 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:46:18,097 - StudentAnalyzer - INFO - Starting correlation analysis
2025-02-14 16:46:19,753 - StudentAnalyzer - INFO - Correlation analysis completed
2025-02-14 16:46:19,754 - StudentAnalyzer - INFO - Starting risk analysis
2025-02-14 16:46:19,754 - StudentAnalyzer - INFO - Starting dropout pattern analysis
2025-02-14 16:46:20,861 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:20,865 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:21,302 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:21,306 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:22,117 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:22,120 - matplotlib.category - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-02-14 16:46:22,622 - StudentAnalyzer - INFO - Dropout pattern analysis completed
2025-02-14 16:46:22,622 - StudentAnalyzer - INFO - Starting risk assessment generation
2025-02-14 16:46:22,636 - StudentAnalyzer - ERROR - Error in risk assessment generation: Bin edges must be unique: Index([0.0, 0.0, 0.0, 1.0], dtype='float64', name='risk_score').
You can drop duplicate edges by setting the 'duplicates' kwarg
2025-02-14 16:46:22,637 - StudentAnalyzer - INFO - Starting semester analysis
2025-02-14 16:46:22,637 - StudentAnalyzer - INFO - Starting semester pattern analysis
2025-02-14 16:46:23,340 - StudentAnalyzer - INFO - Semester pattern analysis completed
2025-02-14 16:46:23,340 - StudentAnalyzer - INFO - Starting ensemble analysis
2025-02-14 16:46:23,341 - StudentAnalyzer - INFO - Preparing features with advanced engineering
2025-02-14 16:46:23,363 - StudentAnalyzer - INFO - Prepared features with shape: (4424, 48)
2025-02-14 16:46:23,364 - StudentAnalyzer - INFO - Optimizing model hyperparameters...
2025-02-14 16:46:23,374 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,379 - StudentAnalyzer - INFO - Trial 0 completed. Best score so far: -0.0000
2025-02-14 16:46:23,383 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,398 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,404 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,411 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,415 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,416 - StudentAnalyzer - INFO - Trial 5 completed. Best score so far: -0.0000
2025-02-14 16:46:23,419 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,422 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,427 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,432 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,484 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,486 - StudentAnalyzer - INFO - Trial 10 completed. Best score so far: -0.0000
2025-02-14 16:46:23,535 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,575 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,617 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,660 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,700 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,702 - StudentAnalyzer - INFO - Trial 15 completed. Best score so far: -0.0000
2025-02-14 16:46:23,742 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,785 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,830 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,872 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,917 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:23,918 - StudentAnalyzer - INFO - Trial 20 completed. Best score so far: -0.0000
2025-02-14 16:46:23,961 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,005 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,048 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,088 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,137 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,138 - StudentAnalyzer - INFO - Trial 25 completed. Best score so far: -0.0000
2025-02-14 16:46:24,183 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,231 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,274 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,320 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,365 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,366 - StudentAnalyzer - INFO - Trial 30 completed. Best score so far: -0.0000
2025-02-14 16:46:24,410 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,460 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,509 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,558 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,603 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,604 - StudentAnalyzer - INFO - Trial 35 completed. Best score so far: -0.0000
2025-02-14 16:46:24,651 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,701 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,750 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,801 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,850 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,852 - StudentAnalyzer - INFO - Trial 40 completed. Best score so far: -0.0000
2025-02-14 16:46:24,901 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:24,951 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,003 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,064 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,111 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,113 - StudentAnalyzer - INFO - Trial 45 completed. Best score so far: -0.0000
2025-02-14 16:46:25,161 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,212 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,266 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,317 - StudentAnalyzer - ERROR - Error in optimization objective: AdaBoostClassifier.__init__() got an unexpected keyword argument 'base_estimator'
2025-02-14 16:46:25,319 - StudentAnalyzer - ERROR - Error in main execution: 'params'
2025-02-14 16:46:25,319 - StudentAnalyzer - ERROR - Detailed error trace:
Traceback (most recent call last):
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\main.py", line 129, in main
    best_params = ensemble_analyzer.optimize_hyperparameters(X, y, n_trials=50)
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\analysis\ensemble_analyzer.py", line 84, in optimize_hyperparameters
    best_params = optimizer.optimize_hyperparameters(X, y)
  File "C:\Users\tiago.batista\Documents\personal\data-mining-project\analysis\optimize_ensemble.py", line 120, in optimize_hyperparameters
    'random_forest': best_trial.user_attrs['params']['random_forest'],
                     ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
KeyError: 'params'
